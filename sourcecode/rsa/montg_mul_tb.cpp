#include "ap_int.h"
#include <iostream>
#include <hls_stream.h>
#include <stdio.h>
#include "ap_axi_sdata.h"

using namespace std;

void montgo(ap_axis<32,1,1,1> A[128], ap_axis<32,1,1,1> C[64]);
int main()
{
  ap_axis<32,1,1,1> A[128];
  ap_axis<32,1,1,1> C[64];

  ap_uint<32*64> a;
  ap_uint<32*64> rrmodn;
  ap_uint<32*64> n;
  ap_uint<32*64+1> r;
  ap_uint<64*64+1> result_mentg;
  ap_uint<32*64> result;

     a = ap_uint<32*64>("7fe0bb5b55741b27f619cf03e1878f77c42943766a3f808c4eaaf9642b0a94117fe0bb5b55741b27f619cf03e1878f77c42943766a3f808c4eaaf9642b0a94117fe0bb5b55741b27f619cf03e1878f77c42943766a3f808c4eaaf9642b0a94117fe0bb5b55741b27f619cf03e1878f77c42943766a3f808c4eaaf9642b0a94117fe0bb5b55741b27f619cf03e1878f77c42943766a3f808c4eaaf9642b0a94117fe0bb5b55741b27f619cf03e1878f77c42943766a3f808c4eaaf9642b0a94117fe0bb5b55741b27f619cf03e1878f77c42943766a3f808c4eaaf9642b0a94117fe0bb5b55741b27f619cf03e1878f77c42943766a3f808c4eaaf9642b0a9411",16);
	 n = ap_uint<32*64>("ffffffff00000001000000020000000300000004fffffffffffffffffffffff1ffffffff00000001000000020000000300000004fffffffffffffffffffffff1ffffffff00000001000000020000000300000004fffffffffffffffffffffff1ffffffff00000001000000020000000300000004fffffffffffffffffffffff1ffffffff00000001000000020000000300000004fffffffffffffffffffffff1ffffffff00000001000000020000000300000004fffffffffffffffffffffff1ffffffff00000001000000020000000300000004fffffffffffffffffffffff1ffffffff00000001000000020000000300000004fffffffffffffffffffffff1",16);
  r = ap_uint
rrmodn = ap_uint<32*64>("793f96466870262307d729d85790c41a06e2640d9531cfd6e739f234f879dcce793f96466870262307d729d85790c41a06e2640d9531cfd6e739f234f879dcce793f96466870262307d729d85790c41a06e2640d9531cfd6e739f234f879dcce793f96466870262307d729d85790c41a06e2640d9531cfd6e739f234f879dcce793f96466870262307d729d85790c41a06e2640d9531cfd6e739f234f879dcce793f96466870262307d729d85790c41a06e2640d9531cfd6e739f234f879dcce793f96466870262307d729d85790c41a06e2640d9531cfd6e739f234f879dcce793f96466870262307d729d85790c41a06e2640d9531cfd6e739f234f879dccf",16);

  for(int i=0; i<128; i++)
  {
	A[i].data.range(31,16) = a.range(16*i+15,16*i);
	A[i].data.range(15,0)  = rrmodn.range(16*i+15,16*i);
    A[i].keep = 1;
    A[i].strb = 1;
    A[i].user = 1;
    A[i].last = 0;
    A[i].id   = 0;
    A[i].dest = 1;
  }

  montgo(A,C);

  ap_uint<32*64> COUT  ;
  for(int ii=0; ii<64; ii++)
  {
	  COUT.range(32*ii+31,32*ii) =C[ii].data;
  }

  result_mentg = (a*r) %n;

  result = result_mentg.range(2047,0);
  std::cout << "COUT  [2047:0] = " << hex << COUT << "\n\r"<<endl;
  std::cout << "result[2047:0] = " << hex << result << "\n\r"<<endl;

  if(COUT != result )
  {
	  printf("ERROR: HW and SW results mismatch\n\r");
	  return 1;
  }
  else
  {
	  printf("Success: HW and SW results match\n\r");
	  return 0;
  }

}
